

services:
  backend:
    build: ./backend          # Dockerfile - Dev Backend
    ports:
      - "${BACKEND_PORT}:3000"  # Puerto del backend mapeado con variable
    depends_on:
      db:
        condition: service_healthy  # Espera a que MySQL esté "healthy" antes de iniciar
    env_file:
      - .env                    # Lee variables de backend si hace falta 
    restart: always              # Reinicia automáticamente si falla
 

  frontend:
    build: ./frontend         # Dockerfile - Dev Frontend
    ports:
      - "${FRONTEND_PORT}:8081"   # Puerto del frontend mapeado con variable
    depends_on:
      - backend

  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:                 # Comprueba que MySQL esté listo antes de levantar el backend
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s

volumes:
  db-data:
